# Nom de l'application
spring.application.name=systeme-reservation-jo-backend

# Configuration de la base de données (Heroku ou fallback local)
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/systeme_reservation_jo}
spring.datasource.username=${JDBC_DATABASE_USERNAME:postgres}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:changeme}

# Configuration de JPA/Hibernate
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}

# Paramètres JWT (pour Heroku, les variables d'environnement les définiront ; sinon, ces valeurs par défaut seront utilisées en local)
app.jwtSecret=${APP_JWT_SECRET:U0Vqd05vpnN7gBDkG73Cu7oCeBLmMPX}
app.jwtExpirationInMs=${APP_JWT_EXPIRATION_IN_MS:86400000}

# Configuration de logs pour Spring Security (optionnel)
logging.level.org.springframework.security=DEBUG

# Configuration du port (Heroku fournit la variable PORT ; en local, utilisera 8080)
server.port=${PORT:8080}
